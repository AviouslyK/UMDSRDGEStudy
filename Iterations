import numpy

#Program to calculate mu1' and mu2' spectra through iterative methods.

#declare wav elength range (380-540 nm)
#Waves = numpy.arange(380, 541)
Waves = numpy.arange(410, 501)

#declare rod thicknesses

t4  = 4
t6  = 6
t10 = 10

# Low Dose Rate

LDR_Mueff4  = [0.041322, 0.035910, 0.031844, 0.028788, 0.026358, 0.024499, 0.022853, 0.021626, 0.020528, 0.019637,
               0.018849, 0.018029, 0.017258, 0.016607, 0.016013, 0.015570, 0.014977, 0.014461, 0.013994, 0.013619,
               0.013137, 0.012762, 0.012449, 0.012127, 0.011827, 0.011501, 0.011249, 0.010984, 0.010709, 0.010420,
               0.010252, 0.009930, 0.009709, 0.009472, 0.009268, 0.009098, 0.008898, 0.008698, 0.008527, 0.008309,
               0.008042, 0.007878, 0.007771, 0.007561, 0.007435, 0.007275, 0.007072, 0.006929, 0.006742, 0.006618,
               0.006462, 0.006314, 0.006147, 0.006091, 0.005886, 0.005688, 0.005549, 0.005389, 0.005349, 0.005248,
               0.005106, 0.005031, 0.004969, 0.004926, 0.004804, 0.004659, 0.004523, 0.004410, 0.004337, 0.004239,
               0.004229, 0.004076, 0.003957, 0.003902, 0.003887, 0.003770, 0.003721, 0.003665, 0.003605, 0.003458,
               0.003395, 0.003295, 0.003206, 0.003127, 0.002990, 0.003013, 0.002885, 0.002890, 0.002829, 0.002759,
               0.002709]


LDR_Mueff6  = [0.036289, 0.031641, 0.028205, 0.025561, 0.023443, 0.021770, 0.020403, 0.019332, 0.018349, 0.017506,
               0.016825, 0.016015, 0.015432, 0.014715, 0.014160, 0.013688, 0.013146, 0.012666, 0.012261, 0.011829,
               0.011444, 0.011123, 0.010780, 0.010471, 0.010200, 0.009884, 0.009627, 0.009407, 0.009152, 0.008882,
               0.008663, 0.008427, 0.008215, 0.007996, 0.007770, 0.007574, 0.007428, 0.007187, 0.006995, 0.006850,
               0.006645, 0.006447, 0.006303, 0.006129, 0.005997, 0.005831, 0.005617, 0.005499, 0.005359, 0.005246,
               0.005046, 0.004929, 0.004795, 0.004654, 0.004545, 0.004384, 0.004178, 0.004102, 0.003985, 0.003901,
               0.003800, 0.003716, 0.003664, 0.003655, 0.003579, 0.003454, 0.003360, 0.003282, 0.003189, 0.003091,
               0.003027, 0.002953, 0.002834, 0.002760, 0.002688, 0.002595, 0.002515, 0.002462, 0.002356, 0.002275,
               0.002227, 0.002097, 0.002047, 0.001983, 0.001889, 0.001828, 0.001766, 0.001729, 0.001652, 0.001576,
               0.001520]
               
LDR_Mueff10 = [0.029111, 0.025226, 0.022275, 0.020010, 0.018267, 0.016908, 0.015794, 0.014862, 0.014115, 0.013409,
               0.012806, 0.012216, 0.011684, 0.011161, 0.010688, 0.010294, 0.009916, 0.009550, 0.009223, 0.008933,
               0.008625, 0.008366, 0.008115, 0.007893, 0.007673, 0.007493, 0.007309, 0.007080, 0.006938, 0.006740,
               0.006501, 0.006385, 0.006204, 0.006011, 0.005848, 0.005677, 0.005521, 0.005344, 0.005193, 0.005043,
               0.004924, 0.004780, 0.004646, 0.004527, 0.004349, 0.004223, 0.004089, 0.003967, 0.003844, 0.003693,
               0.003588, 0.003479, 0.003371, 0.003299, 0.003192, 0.003092, 0.003012, 0.002884, 0.002822, 0.002740,
               0.002655, 0.002604, 0.002515, 0.002470, 0.002381, 0.002323, 0.002263, 0.002186, 0.002143, 0.002073,
               0.002002, 0.001918, 0.001847, 0.001777, 0.001750, 0.001666, 0.001633, 0.001574, 0.001538, 0.001492,
               0.001443, 0.001418, 0.001351, 0.001311, 0.001271, 0.001266, 0.001208, 0.001189, 0.001157, 0.001093,
               0.001089]

# High Dose Rate
Mueff4  =[1.74306, 1.73000, 1.71161, 1.68587, 1.65218, 1.60740, 1.55149, 1.48450, 1.40645, 1.32067, 1.22510, 1.12603,
          1.02467, 0.92212, 0.82209, 0.72258, 0.62771, 0.53925, 0.45767, 0.38389, 0.31823, 0.26100, 0.21207, 0.17116,
          0.13753, 0.11055, 0.08911, 0.07247, 0.05978, 0.05009, 0.04285, 0.03744, 0.03337, 0.03031, 0.02788, 0.02603,
          0.02438, 0.02315, 0.02205, 0.02116, 0.02038, 0.01956, 0.01878, 0.01813, 0.01754, 0.01710, 0.01650, 0.01599,
          0.01552, 0.01515, 0.01466, 0.01429, 0.01398, 0.01365, 0.01335, 0.01303, 0.01278, 0.01251, 0.01224, 0.01195,
          0.01178, 0.01146, 0.01124, 0.01100, 0.01079, 0.01062, 0.01042, 0.01022, 0.01005, 0.00984, 0.00957, 0.00940,
          0.00930, 0.00909, 0.00896, 0.00880, 0.00860, 0.00846, 0.00827, 0.00815, 0.00799, 0.00784, 0.00767, 0.00762,
          0.00741, 0.00721, 0.00708, 0.00692, 0.00688, 0.00677, 0.00663, 0.00656, 0.00650, 0.00645, 0.00633, 0.00619,
          0.00605, 0.00594, 0.00586, 0.00577, 0.00576, 0.00560, 0.00548, 0.00543, 0.00541, 0.00530, 0.00525, 0.00519,
          0.00513, 0.00498, 0.00492, 0.00482, 0.00473, 0.00465, 0.00452, 0.00454, 0.00441, 0.00442, 0.00436, 0.00429,
          0.00424, 0.00420, 0.00417, 0.00413, 0.00404, 0.00398, 0.00389, 0.00386, 0.00380, 0.00376, 0.00373, 0.00365,
          0.00363, 0.00355, 0.00352, 0.00347, 0.00343, 0.00344, 0.00343, 0.00332, 0.00328, 0.00323, 0.00325, 0.00316,
          0.00311, 0.00313, 0.00303, 0.00305, 0.00304, 0.00297, 0.00288, 0.00284, 0.00282, 0.00280, 0.00280, 0.00276,
          0.00277, 0.00273, 0.00265, 0.00266, 0.00264]

Mueff6  =[1.18534, 1.18280, 1.18097, 1.17848, 1.17191, 1.16189, 1.14847, 1.12597, 1.09322, 1.04957, 0.99112, 0.92293,
          0.84679, 0.76635, 0.68468, 0.60385, 0.52584, 0.45226, 0.38439, 0.32283, 0.26812, 0.22027, 0.17954, 0.14537,
          0.11720, 0.09457, 0.07659, 0.06253, 0.05181, 0.04367, 0.03748, 0.03283, 0.02940, 0.02675, 0.02463, 0.02296,
          0.02159, 0.02052, 0.01954, 0.01870, 0.01802, 0.01721, 0.01662, 0.01591, 0.01535, 0.01488, 0.01434, 0.01386,
          0.01345, 0.01302, 0.01264, 0.01231, 0.01197, 0.01166, 0.01139, 0.01108, 0.01082, 0.01060, 0.01034, 0.01007,
          0.00985, 0.00962, 0.00941, 0.00919, 0.00896, 0.00877, 0.00862, 0.00838, 0.00819, 0.00804, 0.00784, 0.00764,
          0.00749, 0.00732, 0.00719, 0.00702, 0.00681, 0.00669, 0.00655, 0.00644, 0.00624, 0.00612, 0.00599, 0.00585,
          0.00574, 0.00558, 0.00537, 0.00529, 0.00518, 0.00509, 0.00499, 0.00491, 0.00486, 0.00485, 0.00477, 0.00465,
          0.00455, 0.00447, 0.00438, 0.00428, 0.00422, 0.00414, 0.00403, 0.00395, 0.00388, 0.00379, 0.00371, 0.00365,
          0.00355, 0.00347, 0.00342, 0.00329, 0.00324, 0.00317, 0.00308, 0.00302, 0.00296, 0.00292, 0.00284, 0.00277,
          0.00271, 0.00267, 0.00259, 0.00253, 0.00252, 0.00244, 0.00239, 0.00232, 0.00227, 0.00221, 0.00220, 0.00214,
          0.00209, 0.00203, 0.00196, 0.00194, 0.00190, 0.00187, 0.00183, 0.00180, 0.00177, 0.00170, 0.00168, 0.00162,
          0.00158, 0.00158, 0.00150, 0.00152, 0.00145, 0.00143, 0.00139, 0.00133, 0.00131, 0.00129, 0.00130, 0.00129,
          0.00123, 0.00120, 0.00117, 0.00115,0.00112]
          
Mueff10 =[0.7184420, 0.7185922, 0.7177067, 0.7174141, 0.7174141, 0.7171215, 0.7165363, 0.7150964, 0.7131136, 0.7081894,
          0.6992574, 0.6833801, 0.6555715, 0.6141724, 0.5608153, 0.5013751, 0.4390986, 0.3795930, 0.3228986, 0.2705316,
          0.2242944, 0.1839786, 0.1494106, 0.1204860, 0.0966306, 0.0774187, 0.0621682, 0.0503292, 0.0412626, 0.0343374,
          0.0291348, 0.0252500, 0.0222990, 0.0200346, 0.0182910, 0.0169322, 0.0158185, 0.0148857, 0.0141388, 0.0134332,
          0.0128302, 0.0122406, 0.0117084, 0.0111856, 0.0107125, 0.0103180, 0.0099397, 0.0095741, 0.0092472, 0.0089572,
          0.0086497, 0.0083901, 0.0081396, 0.0079170, 0.0076973, 0.0075175, 0.0073330, 0.0071044, 0.0069626, 0.0067646,
          0.0065254, 0.0064094, 0.0062281, 0.0060346, 0.0058723, 0.0057010, 0.0055448, 0.0053678, 0.0052175, 0.0050676,
          0.0049477, 0.0048039, 0.0046698, 0.0045509, 0.0043728, 0.0042472, 0.0041129, 0.0039916, 0.0038682, 0.0037171,
          0.0036126, 0.0035031, 0.0033950, 0.0033233, 0.0032161, 0.0031162, 0.0030362, 0.0029084, 0.0028463, 0.0027643,
          0.0026792, 0.0026285, 0.0025392, 0.0024941, 0.0024047, 0.0023469, 0.0022867, 0.0022101, 0.0021668, 0.0020975,
          0.0020264, 0.0019419, 0.0018709, 0.0018013, 0.0017739, 0.0016898, 0.0016575, 0.0015977, 0.0015622, 0.0015160,
          0.0014676, 0.0014419, 0.0013752, 0.0013356, 0.0012951, 0.0012906, 0.0012319, 0.0012127, 0.0011816, 0.0011173,
          0.0011134, 0.0010539, 0.0010234, 0.0009969, 0.0009698, 0.0009411, 0.0009024, 0.0008695, 0.0008580, 0.0008300,
          0.0008056, 0.0007462, 0.0007289, 0.0007161, 0.0006917, 0.0006688, 0.0006425, 0.0006162, 0.0005693, 0.0005946,
          0.0005639, 0.0005219, 0.0004952, 0.0004853, 0.0004308, 0.0004304, 0.0004157, 0.0003877, 0.0003834, 0.0003528,
          0.0003049, 0.0003120, 0.0002990, 0.0002519, 0.0002469, 0.0002390, 0.0002103, 0.0001751, 0.0001572, 0.0001245,
          0.0001095]


#Begin Iterations
#Define arrays for each variable, the first index is the iteration, the second is the Mu1/Mu2/Znot  value at the corresponding
# wavelength  in the waves[] array.

# Prime means high dose rate coefficients, no Prime is low dose rate.
Znot =[]
Mu1  =[]
Mu2  =[]

Znot_prime = numpy.array([[],[]])
Mu1_prime  = numpy.array([[],[]])
Mu2_prime  = numpy.array([[],[]])

# starting values (Zeroth Iteration) for the parameters Mu1 and Mu2_prime
# Note this requires the assumption that Mu1 = Mueff4


for i in range(len(Waves)):

    Mu2_prime[0][i] =  (Mueff6[i]*t6 - Mueff10[i])/(t6 - t10)
    Znot[i] = (t6*t10*(LDR_MuEff6[i]-LDR_MuEff10[i]))/(2*((LDR_MuEff6[i]*t6-LDR_MuEff10[i]*t10+LDR_MuEff4[i]*(t10-t6))));
    Mu1[i] = LDR_Mueff4[i]
Iterations = list(range(10));

#loop over iterations
for j in range (len(Iterations)):

    #loop over wavelength range
    for i in range(len(Waves)):


        if j == 0: #Znot_prime[0] | Mu1, Mu2_prime[0]
            Znot_4  = ((Mueff4[i]-Mu2_prime[j][i])*t4)/(2*(Mu1[i]-Mu2_prime[j][i]))
            Znot_6  = ((Mueff6[i]-Mu2_prime[j][i])*t6)/(2*(Mu1[i]-Mu2_prime[j][i]))
            Znot_10 = ((Mueff10[i]-Mu2_prime[j][i])*t10)/(2*(Mu1[i]-Mu2_prime[j][i]))

            Znot_prime[j][i] = (Znot_4 + Znot_6 + Znot_10)/3

        elif j == 1: #Mu2_prime[1] | Znot_prime[0], Mu1
            Mu2_4  = ((Mueff4[i]*t4)-(2*Znot_prime[j-1][i]*Mu1[i]))/(t4-(2*Znot_prime[j-1][i]))
            Mu2_6  = ((Mueff4[i]*t6)-(2*Znot_prime[j-1][i]*Mu1[i]))/(t6-(2*Znot_prime[j-1][i]))
            Mu2_10 = ((Mueff4[i]*t10)-(2*Znot_prime[j-1][i]*Mu1[i]))/(t10-(2*Znot_prime[j-1][i]))
  elif j == 2: #Mu1_prime[2] | Mu2_prime[1], Znot_prime[0]

            Mu1_4 = ((Mueff4[i]-Mu2_prime[j-1][i])*t4)/(2*Znot_prime[j-2][i]) + Mu2_prime[j-1][i]
            Mu1_6 = ((Mueff6[i]-Mu2_prime[j-1][i])*t6)/(2*Znot_prime[j-2][i]) + Mu2_prime[j-1][i]
            Mu1_10 = ((Mueff10[i]-Mu2_prime[j-1][i])*t10)/(2*Znot_prime[j-2][i]) + Mu2_prime[j-1][i]

            Mu1_prime[j][i] = (Mu1_4 + Mu1_6 + Mu1_10)/3

        elif j == 3: #Znot_prime[3] | Mu1_prime[2], Mu2

            Znot_4  = ((Mueff4[i]-Mu2[i])*t4)/(2*(Mu1_prime[j-1][i]-Mu2[i]))
            Znot_6  = ((Mueff6[i]-Mu2[i])*t6)/(2*(Mu1_prime[j-1][i]-Mu2[i]))
            Znot_10 = ((Mueff10[i]-Mu2[i])*t10)/(2*(Mu1_prime[j-1][i]-Mu2[i]))

            Znot_prime[j][i] = (Znot_4 + Znot_6 + Znot_10)/3


        elif j == 4: #Mu2_prime[4] | Znot_prime[3], Mu1_prime[2]

            Mu2_4  = ((Mueff4[i]*t4)-(2*Znot_prime[j-1][i]*Mu1_prime[j-2][i]))/(t4-(2*Znot_prime[j-1][i]))
            Mu2_6  = ((Mueff4[i]*t6)-(2*Znot_prime[j-1][i]*Mu1_prime[j-2][i]))/(t6-(2*Znot_prime[j-1][i]))
            Mu2_10 = ((Mueff4[i]*t10)-(2*Znot_prime[j-1][i]*Mu1_prime[j-2][i]))/(t10-(2*Znot_prime[j-1][i]))

            Mu2_prime[j][i] = (Mu24 + Mu2_6 + Mu2_10)/3

        elif j == 5: #Mu1_prime[5] | Mu2_prime[4], Znot_prime[3]

            Mu1_4 = ((Mueff4[i]-Mu2_prime[j-1][i])*t4)/(2*Znot_prime[j-2][i]) + Mu2_prime[j-1][i]
            Mu1_6 = ((Mueff6[i]-Mu2_prime[j-1][i])*t6)/(2*Znot_prime[j-2][i]) + Mu2_prime[j-1][i]
            Mu1_10 = ((Mueff10[i]-Mu2_prime[j-1][i])*t10)/(2*Znot_prime[j-2][i]) + Mu2_prime[j-1][i]


#print out the iterations
for j in range (len(Iterations)):

    print("Wavelength \t\t Mu1_prime%d \t\t Mu2_prime%d \t\t Znot_prime%d" % j, j, j)

    #loop over wavelength range
    for i in range(len(Waves)):

        print("%d \t\t %d \t\t %d \t\t %d" % Waves[i], Mu1_prime[j][i], Mu2_prime[j][i], Znot_prime[j][i])
